@page "/NewPatient"
@layout MainLayout___Copy___Copy___Copy
@using HospitalSystem.Data
<style>
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    #success {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: lightgreen;
        color: black;
        padding: 10px;
        border-radius: 5px;
        display: inline-block;
    }
    
    .message-area {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        display: inline-block;
    }
    .page-heading {
        text-align: center;
        font-size: 25px;
        border-bottom: 2px solid #B6BBC4;
    }

    .input-table {
        margin-top: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .input-fields {
        width: 100%;
        padding: 5px;
        margin-bottom: 10px;
        box-sizing: border-box;
        border-radius: 20px;
        border: 1px solid #B6BBC4;
    }

    td {
        padding: 10px;
    }

    .search-button-appointment {
        background-color: #7071E8;
        color: white;
        border-radius: 20px;
        margin-top: 10px;
    }

</style>

<h1 class="page-heading">New Patient</h1>

<div class="input-table">
    <table>
        <tr>
            <td>
                <label for="FirstName">First Name:</label>
                <input type="text" class="input-fields" id="First-Name" name="First-Name" placeholder="Enter First Name" @bind="Fname">
            </td>
            <td>
                <label for="LastName">Last Name:</label>
                <input type="text" class="input-fields" id="Last-Name" name="Last-Name" placeholder="Enter Last Name" @bind="Lname">
            </td>
        </tr>
        <tr>
            <td>
                <label for="DateOfBirth">Date of Birth:</label>
                <input type="text" class="input-fields" id="Speciality" name="Speciality" placeholder="Enter Doctors's Speciality" @bind="DOB">
            </td>
            <td>
                <label for="Gender">Gender:</label>
                <select class="input-fields" @onchange="OnSelectGender">
                    <option>--Select--</option>
                    <option value="M">M</option>
                    <option value="F">F</option>
                </select>
            </td>
        </tr>
        <tr>
            <td>
                <label for="Disease">Disease</label>
                <input type="text" class="input-fields" id="Speciality" name="Speciality" placeholder="Disease" @bind="Disease">
            </td>
            <td>
                <label for="Contact">Phone</label>
                <input type="text" class="input-fields" id="Contact" placeholder="Enter Phone no." @bind="Contact" >
            </td>
        </tr>
        <tr>
            <td class="button-container">
                <button class="search-button-appointment" @onclick="done">Done</button>
            </td>
        </tr>
    </table>
</div>
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="container">
        <div class="message-area">
            <p class="text-danger">@ErrorMessage</p>
        </div>
    </div>
}
else if(IsPatientAdded)
{
    <div class="container">
        <div id="success">
            <p>@SuccessMessage</p>
        </div>
    </div>
}

@code
{
    public string Fname;
    public string Lname;
    public string DOB;
    public string Gender;
    public string Disease;
    public string Contact;
    string ErrorMessage;
    bool IsPatientAdded = false; // Track whether a patient is added
    string SuccessMessage;
    Patient Controller = new Patient();

    public void OnSelectGender(ChangeEventArgs e)
    {
        Gender = e.Value.ToString();
    }

    public void done()
    {
        try
        {
            // Validate date format
            if (!FormatValidator.IsValidDateFormat(DOB))
            {
                throw new InvalidDateFormatException();
            }

            // Validate phone number
            if (!FormatValidator.IsValidPhoneNumber(Contact))
            {
                throw new InvalidPhoneNumberFormatException();
            }
            int ID = Controller.GenerateId();
            object Patient = new
            {
                id = ID,
                fname = Fname,
                lname = Lname,
                dob = DOB,
                gender = Gender,
                disease = Disease,
                contact = Contact
            };

            Controller.Add(Patient);
            IsPatientAdded = true; // Set flag to indicate successful addition
            SuccessMessage = $"Patient added successfully! Patient#:{ID}";
        }
        catch (InvalidDateFormatException ex)
        {
            ShowErrorMessage(ex.Message);
        }
        catch (InvalidPhoneNumberFormatException ex)
        {
            ShowErrorMessage(ex.Message);
        }
        catch (Exception ex)
        {
            ShowErrorMessage(ex.Message);
        }
    }

    private void ShowErrorMessage(string message)
    {
        // You can use this method to display the error message in your UI
        ErrorMessage = message;
        IsPatientAdded = false; // Reset flag on error
    }
}
