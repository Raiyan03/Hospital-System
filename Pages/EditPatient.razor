@page "/EditPatient/{PatientId:int}/{PatientFName}/{PatientLName}/{PatientDOB}/{PatientGender}/{PatientDisease}/{PatientPhone}"

@using HospitalSystem.Data

<style>
    .page-heading {
        text-align: center;
        font-size: 25px;
        border-bottom: 2px solid #B6BBC4;
    }

    #success {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: lightgreen;
        color: black;
        padding: 10px;
        border-radius: 5px;
        display: inline-block;
    }
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .message-area {
        position: fixed;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        border-radius: 5px;
        display: inline-block;
    }

    .input-table {
        margin-top: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .input-fields {
        width: 100%;
        padding: 5px;
        margin-bottom: 10px;
        box-sizing: border-box;
        border-radius: 20px;
        border: 1px solid #B6BBC4;
    }

    td {
        padding: 10px;
    }

    .search-button-appointment {
        background-color: #7071E8;
        color: white;
        border-radius: 20px;
        margin-top: 10px;
    }

</style>

<h1 class="page-heading">Edit Patient</h1>

<div class="input-table">
    <table>
        <tr>
            <td>
                <label for="FirstName">First Name:</label>
                <input type="text" class="input-fields" id="First-Name" name="First-Name" placeholder="Enter First Name" @bind="PatientFName">
            </td>
            <td>
                <label for="LastName">Last Name:</label>
                <input type="text" class="input-fields" id="Last-Name" name="Last-Name" placeholder="Enter Last Name" @bind="PatientLName">
            </td>
        </tr>
        <tr>
            <td>
                <label for="DateOfBirth">Date of Birth:</label>
                <input type="text" class="input-fields" id="Speciality" name="Speciality" placeholder="Enter Doctors's Speciality" @bind="PatientDOB">
            </td>
            <td>
                <label for="Gender">Gender:</label>
                <select class="input-fields" @onchange="OnSelectGender">
                    @if (PatientGender == "M")
                    {
                        <option value="M">M</option>
                        <option value="F">F</option>
                    }
                    else
                    {
                        <option value="F">F</option>
                        <option value="M">M</option>
                    }
                </select>
            </td>
        </tr>
        <tr>
            <td>
                <label for="Disease">Disease</label>
                <input type="text" class="input-fields" id="Speciality" name="Speciality" placeholder="Disease" @bind="PatientDisease">
            </td>
            <td>
                <label for="Contact">Phone</label>
                <input type="text" class="input-fields" id="Contact" placeholder="Enter Phone no." @bind="PatientPhone">
            </td>
        </tr>
        <tr>
            <td class="button-container">
                <button class="search-button-appointment" @onclick="done">Done</button>
            </td>
        </tr>
    </table>
</div>
@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="container">
        <div class="message-area">
            <p class="text-danger">@ErrorMessage</p>
        </div>
    </div>
}
else if (isEdited) // Edited this line
{
<div class="container">
    <div id="success">
        <p>@SuccessMessage</p>
    </div>
</div>
}
@code {
    string ErrorMessage;
    Patient Controller = new Patient();

    [Parameter]
    public int PatientID { get; set; }
    [Parameter]
    public string PatientFName { get; set; }
    [Parameter]
    public string PatientLName { get; set; }
    [Parameter]
    public string PatientDOB { get; set; }
    [Parameter]
    public string PatientGender { get; set; }
    [Parameter]
    public string PatientDisease { get; set; }
    [Parameter]
    public string PatientPhone { get; set; }
    string SuccessMessage = "Info updated!";
    bool isEdited = false;

    public void OnSelectGender(ChangeEventArgs e)
    {
        PatientGender = e.Value.ToString();
    }
    public void done()
    {
        try
        {
            // Validate date format
            if (!FormatValidator.IsValidDateFormat(PatientDOB))
            {
                throw new InvalidDateFormatException();
            }

            // Validate phone number format
            if (!FormatValidator.IsValidPhoneNumber(PatientPhone))
            {
                throw new InvalidPhoneNumberFormatException();
            }

            object patient = new
            {
                id = PatientID,
                Fname = PatientFName,
                Lname = PatientLName,
                DOB = PatientDOB,
                Gender = PatientGender,
                Disease = PatientDisease,
                Phone = PatientPhone
            };

            Controller.Update(patient);
            isEdited = true;

        }
        catch (InvalidDateFormatException ex)
        {
            ShowErrorMessage(ex.Message);
        }
        catch (InvalidPhoneNumberFormatException ex)
        {
            ShowErrorMessage(ex.Message);
        }
        catch (Exception ex)
        {
            ShowErrorMessage(ex.Message);
        }
    }

    private void ShowErrorMessage(string message)
    {
        ErrorMessage = message;
    }

}
